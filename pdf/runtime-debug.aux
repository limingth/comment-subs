\relax 
\ifx\hyper@anchor\@undefined
\global \let \oldcontentsline\contentsline
\gdef \contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global \let \oldnewlabel\newlabel
\gdef \newlabel#1#2{\newlabelxx{#1}#2}
\gdef \newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\let \contentsline\oldcontentsline
\let \newlabel\oldnewlabel}
\else
\global \let \hyper@last\relax 
\fi

\providecommand*\HyPL@Entry[1]{}
\HyPL@Entry{0<</S/D>>}
\@writefile{toc}{\contentsline {section}{\numberline {1}Kmod 运行时调试图}{1}{section.1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}编译安装运行调试图}{1}{subsection.1.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.1}wget下载源码包}{1}{subsubsection.1.1.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.2}tar解压源码包}{1}{subsubsection.1.1.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.3}configure 配置项目源码}{1}{subsubsection.1.1.3}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces wget下载源码包}}{2}{figure.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces tar解压源码包}}{2}{figure.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces configure配置源码包}}{4}{figure.3}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.4}编译项目源码}{4}{subsubsection.1.1.4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.5}测试生成命令}{5}{subsubsection.1.1.5}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces make编译源码包}}{6}{figure.4}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces 测试生成命令}}{7}{figure.5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}项目Debug版运行调试图}{8}{subsection.1.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.1}配置时加上 --enable-debug, --enable-logging 参数}{8}{subsubsection.1.2.1}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces 配置时加上调试参数}}{14}{figure.6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.2}make clean \&\& make 重新编译}{14}{subsubsection.1.2.2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.3}设置日志优先级 KMOD\_LOG=7}{16}{subsubsection.1.2.3}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces make重新编译}}{17}{figure.7}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.4}卸载模块以便进行下一次插入}{17}{subsubsection.1.2.4}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces 设置 KMOD\_LOG=7 模式下插入模块}}{18}{figure.8}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.5}设置日志优先级 KMOD\_LOG=6}{18}{subsubsection.1.2.5}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces 设置 KMOD\_LOG=6 模式下插入模块}}{19}{figure.9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}源码修改运行调试图}{19}{subsection.1.3}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.1}修改 modprobe.c 源码}{19}{subsubsection.1.3.1}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.2}修改 kmod\_module\_parse\_depline 函数}{19}{subsubsection.1.3.2}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces 插入130行的打印 line 的语句}}{20}{figure.10}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.3}重新编译生成新的 modprobe}{20}{subsubsection.1.3.3}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces make编译成功，增量编译了libkmod-module模块}}{21}{figure.11}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.4}运行 modprobe nfs}{21}{subsubsection.1.3.4}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces 运行 modprobe nfs 完成插入}}{22}{figure.12}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.5}插入167行打印语句}{23}{subsubsection.1.3.5}}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces 插入打印每个模块名称的调试代码}}{23}{figure.13}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.6}重新编译生成新的 modprobe}{24}{subsubsection.1.3.6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.7}运行 modprobe nfs}{24}{subsubsection.1.3.7}}
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces 调试代码输出详细调试信息}}{25}{figure.14}}
